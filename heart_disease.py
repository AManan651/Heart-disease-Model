# -*- coding: utf-8 -*-
"""HEART_DISEASE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nZ233R-j9DpLR-qLsRC4nmd9Gmdt7S90
"""

import  pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""**HERE TARGET VARIABLE IS THERE A PATIENT HAVE HEART DISEASE  YES/NO ??/**
we know for lineas binary target we have easy model that's linear Regression.
"""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report

# WE TEST ALL THE MODEL
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC

"""Data collection:
kaggle>> Download Heart disease data >> upload it in file section...
"""

heart_data= pd.read_csv('/content/heart.csv')

"""See Data 1st 5 Data"""

heart_data.head()

heart_data.shape

heart_data.info()

"""STATISTICAL REPRESENTATION"""

heart_data.describe()

"""Data count : generally we count data only for target variable"""

heart_data['target'].value_counts()

"""1>>> defective
0>>> healthy

**SPILIT DATA **
"""

X= heart_data.drop('target',axis=1)
Y= heart_data['target']

X_train,X_test,Y_train,Y_test= train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape, X_train.shape,X_test.shape)

model=LogisticRegression()
# model=LogisticRegression(min_sample_leaf=5)>>>>> 5ta data dekhe decision nisse
model.fit(X_train,Y_train)

X_train_prediction= model.predict(X_train)
X_test_prediction= model.predict(X_test)
train_accuracy= accuracy_score(X_train_prediction,Y_train)
test_accuracy= accuracy_score(Y_test,X_test_prediction)
print(train_accuracy,test_accuracy)